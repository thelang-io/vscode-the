// SYNTAX TEST "source.the"

loop {}
// <------- meta.loop.the
// <---- keyword.control.loop.the
//   ^^ meta.block.the

loop true {}
// <------------ meta.loop.the
// <---- keyword.control.loop.the
//   ^^^^ constant.language.boolean.true.the
//        ^^ meta.block.the

loop i < 10 {}
// <-------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^ variable.other.readwrite.the
//     ^ keyword.operator.relational.the
//       ^^ constant.numeric.the
//          ^^ meta.block.the

loop mut i := 0; i < 10; i++ {}
// <------------------------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^^^^^^^^^^ meta.var.expr.the
//             ^ punctuation.terminator.statement.the
//               ^ variable.other.readwrite.the
//                 ^ keyword.operator.relational.the
//                   ^^ constant.numeric.the
//                     ^ punctuation.terminator.statement.the
//                       ^ variable.other.readwrite.the
//                        ^^ keyword.operator.increment.the
//                           ^^ meta.block.the

loop ; j < 10; j++ {}
// <--------------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^ punctuation.terminator.statement.the
//     ^ variable.other.readwrite.the
//       ^ keyword.operator.relational.the
//         ^^ constant.numeric.the
//           ^ punctuation.terminator.statement.the
//             ^ variable.other.readwrite.the
//              ^^ keyword.operator.increment.the
//                 ^^ meta.block.the


loop ; k < 10; {}
// <----------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^ punctuation.terminator.statement.the
//     ^ variable.other.readwrite.the
//       ^ keyword.operator.relational.the
//         ^^ constant.numeric.the
//           ^ punctuation.terminator.statement.the
//             ^^ meta.block.the

loop mut i := 0; i < 10; i++ { test(i) }
// <---------------------------------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^^^^^^^^^^ meta.var.expr.the
//             ^ punctuation.terminator.statement.the
//               ^ variable.other.readwrite.the
//                 ^ keyword.operator.relational.the
//                   ^^ constant.numeric.the
//                     ^ punctuation.terminator.statement.the
//                       ^ variable.other.readwrite.the
//                        ^^ keyword.operator.increment.the
//                           ^^^^^^^^^^^ meta.block.the

loop mut i := 0; i < 10; i++ {
// <------------------------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^^^^^^^^^^ meta.var.expr.the
//             ^ punctuation.terminator.statement.the
//               ^ variable.other.readwrite.the
//                 ^ keyword.operator.relational.the
//                   ^^ constant.numeric.the
//                     ^ punctuation.terminator.statement.the
//                       ^ variable.other.readwrite.the
//                        ^^ keyword.operator.increment.the
//                           ^ meta.block.the
  test(i)
// <--------- meta.loop.the meta.block.the
}
// <- meta.loop.the meta.block.the

loop (mut i := 0; i < 10; i++) {}
// <---------------------------------------- meta.loop.the
// <---- keyword.control.loop.the
//   ^ meta.brace.round.the
//    ^^^^^^^^^^ meta.var.expr.the
//              ^ punctuation.terminator.statement.the
//                ^ variable.other.readwrite.the
//                  ^ keyword.operator.relational.the
//                    ^^ constant.numeric.the
//                      ^ punctuation.terminator.statement.the
//                        ^ variable.other.readwrite.the
//                         ^^ keyword.operator.increment.the
//                           ^ meta.brace.round.the
//                             ^^ meta.block.the

loop true {
// <----------- meta.loop.the
  loop true {}
// <~~----------- meta.loop.the meta.loop.the
}
// <- meta.loop.the
