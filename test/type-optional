// SYNTAX TEST "source.the"

test: int?
//    ^^^ storage.type.built-in.primitive.the
//       ^ keyword.operator.optional.the

test: Human?
//    ^^^^^ entity.name.type.the
//         ^ keyword.operator.optional.the

test: int[]?
//    ^^^ storage.type.built-in.primitive.the
//       ^^ meta.type.array.the
//       ^ meta.brace.square.the
//        ^ meta.brace.square.the
//         ^ keyword.operator.optional.the

test: Human[]?
//    ^^^^^ entity.name.type.the
//         ^^ meta.type.array.the
//         ^ meta.brace.square.the
//          ^ meta.brace.square.the
//           ^ keyword.operator.optional.the

test: ((a: int, mut b: str) -> int)?
//    ^ meta.brace.round.the
//     ^ meta.brace.round.the
//      ^ variable.parameter.the
//       ^ keyword.operator.type.annotation.the
//         ^^^ storage.type.built-in.primitive.the
//            ^ punctuation.separator.parameter.the
//              ^^^ storage.modifier.the
//                  ^ variable.parameter.the
//                   ^ keyword.operator.type.annotation.the
//                     ^^^ storage.type.built-in.primitive.the
//                        ^ meta.brace.round.the
//                          ^^ keyword.operator.type.function.the
//                             ^^^ storage.type.built-in.primitive.the
//                                ^ meta.brace.round.the
//                                 ^ keyword.operator.optional.the

test: ((a: Test, mut b: Test) -> Test)?
//    ^ meta.brace.round.the
//     ^ meta.brace.round.the
//      ^ variable.parameter.the
//       ^ keyword.operator.type.annotation.the
//         ^^^^ entity.name.type.the
//             ^ punctuation.separator.parameter.the
//               ^^^ storage.modifier.the
//                   ^ variable.parameter.the
//                    ^ keyword.operator.type.annotation.the
//                      ^^^^ entity.name.type.the
//                          ^ meta.brace.round.the
//                            ^^ keyword.operator.type.function.the
//                               ^^^^ entity.name.type.the
//                                   ^ meta.brace.round.the
//                                    ^ keyword.operator.optional.the

test: int[str]?
//    ^^^ storage.type.built-in.primitive.the
//       ^^^^^ meta.type.map.the
//            ^ keyword.operator.optional.the

test: Human[Test]?
//    ^^^^^ entity.name.type.the
//         ^^^^^^ meta.type.map.the
//               ^ keyword.operator.optional.the

test: int??
//    ^^^ storage.type.built-in.primitive.the
//       ^ keyword.operator.optional.the
//        ^ keyword.operator.optional.the

test: Human??
//    ^^^^^ entity.name.type.the
//         ^ keyword.operator.optional.the
//          ^ keyword.operator.optional.the

test: (ref int)?
//    ^ meta.brace.round.the
//     ^^^^^^^ meta.type.reference.the
//            ^ meta.brace.round.the
//             ^ keyword.operator.optional.the

test: (ref Human)?
//    ^ meta.brace.round.the
//     ^^^^^^^^^ meta.type.reference.the
//              ^ meta.brace.round.the
//               ^ keyword.operator.optional.the

test: (int | str)?
//    ^ meta.brace.round.the
//     ^^^ storage.type.built-in.primitive.the
//         ^ keyword.operator.type.the
//           ^^^ storage.type.built-in.primitive.the
//              ^ meta.brace.round.the
//               ^ keyword.operator.optional.the

test: (Human | Alien)?
//    ^ meta.brace.round.the
//     ^^^^^ entity.name.type.the
//           ^ keyword.operator.type.the
//             ^^^^^ entity.name.type.the
//                  ^ meta.brace.round.the
//                   ^ keyword.operator.optional.the
